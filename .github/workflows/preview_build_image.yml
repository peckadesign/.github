name: Build Docker image template

on:
  workflow_call:
    inputs:
      image_tag:
        description: PR number or other identifier
        required: true
        type: string

      pr_number:
        description: PR number
        required: false
        type: string

      project:
        description: Project ID
        required: true
        type: string

    secrets:
      COMPOSER_AUTH:
        required: true

      HTTP_PROXY_AUTH:
        required: true

      PD_REGISTRY_USERNAME:
        required: true

      PD_REGISTRY_PASSWORD:
        required: true

      REGISTRY_URL:
        required: true

jobs:
  build:
    timeout-minutes: 15
    runs-on: [ self-hosted, k8s-gnome ]
    name: Build and push container image
    permissions:
      contents: 'read'
      packages: 'write'
    steps:
      - name: Check for Secrets and Inputs
        id: inputs-check
        shell: bash
        run: |
          if [ "${{ secrets.REGISTRY_URL }}" == '' ]; then
            echo "is-valid=false" >> $GITHUB_OUTPUT;
            echo "msg=REGISTRY_URL" >> $GITHUB_OUTPUT;
          elif [ "${{ secrets.HTTP_PROXY_AUTH }}" == '' ]; then
            echo "is-valid=false" >> $GITHUB_OUTPUT;
            echo "msg=HTTP_PROXY_AUTH" >> $GITHUB_OUTPUT;
          elif [ "${{ inputs.project }}" == '' ]; then
            echo "is-valid=false" >> $GITHUB_OUTPUT;
            echo "msg=projectID" >> $GITHUB_OUTPUT;
          else
            echo "is-valid=true" >> $GITHUB_OUTPUT;
            echo "msg=" >> $GITHUB_OUTPUT;
          fi
      - name: Check result
        if: ${{ steps.inputs-check.outputs.is-valid != 'true' }}
        shell: bash
        run: |
          echo "::error Not valid input ${{ steps.inputs-check.outputs.msg}}"
          exit 1
      - uses: actions/checkout@v4

      - uses: docker/login-action@v2
        name: Login to Registry
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.PD_REGISTRY_USERNAME }}
          password: ${{ secrets.PD_REGISTRY_PASSWORD }}

      - name: Install Docker Buildx
        run: |
          mkdir -p "$HOME/.docker/cli-plugins"
          curl -SsL "https://github.com/docker/buildx/releases/download/v0.9.1/buildx-v0.9.1.linux-amd64" -o "$HOME/.docker/cli-plugins/docker-buildx"
          chmod +x "$HOME/.docker/cli-plugins/docker-buildx"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          tags: ${{ secrets.REGISTRY_URL }}/peckadesign/${{ inputs.project }}:${{ inputs.image_tag }}
          push: true
          build-args: |
            COMPOSER_AUTH=${{ secrets.COMPOSER_AUTH }}
            ENV_PROJECT=${{ inputs.project }}
            PR_NUMBER=${{ inputs.pr_number }}
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
            HTTP_PROXY_AUTH=${{ secrets.HTTP_PROXY_AUTH }}
