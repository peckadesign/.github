name: Monorepo release
description: Akce pro vytvoření release pro P7 produkty

inputs:
  version:
    description: 'Version (patch|minor|major)'
    required: true
  gh-token:
    required: true
    description: "GitHub token"
  dry-run:
    description: "Spustí release v režimu dry-run (true|false)"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Validate dry-run input
      id: dryrun
      shell: bash
      run: |
        DRYRUN="${{ inputs.dry-run }}"
        case "$DRYRUN" in
          true|false) echo "valid=true" >> "$GITHUB_OUTPUT" ;;
          *) echo "::error::Invalid dry-run value: $DRYRUN (allowed: true|false)"; exit 1 ;;
        esac

    - name: Stage Check
      id: stage
      shell: bash
      run: |
        VERSION="${{ inputs.version }}"
        case "$VERSION" in
          patch) echo "stage=patch" >> "$GITHUB_OUTPUT" ;;
          minor) echo "stage=release" >> "$GITHUB_OUTPUT" ;;
          major) echo "stage=release" >> "$GITHUB_OUTPUT" ;;
          *) echo "::error::Unknown version type: $VERSION"; exit 1 ;;
        esac

    - name: Set Git user
      shell: bash
      run: |
        # Ošetříme safe.directory (aby Git nehlásil dubious ownership)
        git config --global --add safe.directory "$GITHUB_WORKSPACE"
        # Pokud jsme uvnitř repozitáře, použijeme --local
        if git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
          git config --local user.name "${{ github.actor }}"
          git config --local user.email "action@github.com"
        else
          # Fallback – použijeme globální konfiguraci
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "action@github.com"
        fi

    - name: Configure Git auth for GitHub (fallback na git clone)
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.gh-token }}
      run: |
        echo "::add-mask::${GH_TOKEN}"
#         1) Composer: přidej HTTP Basic (vedle stávajícího github-oauth)
        printf '%s\n' \
              'COMPOSER_AUTH={"github-oauth":{"github.com":"'"${GH_TOKEN}"'"},"http-basic":{"github.com":{"username":"x-access-token","password":"'"${GH_TOKEN}"'"}}, "github-protocols":["https"]}' \
              >> "$GITHUB_ENV"

#        2) Git: přesměruj https/ssh GitHub URL na https s tokenem
        git config --global url."https://x-access-token:${GH_TOKEN}@github.com/".insteadOf "https://github.com/"
        git config --global url."https://x-access-token:${GH_TOKEN}@github.com/".insteadOf "git@github.com:"
        git config --global url."https://x-access-token:${GH_TOKEN}@github.com/".insteadOf "ssh://git@github.com/"


    - name: Composer Install
      uses: ramsey/composer-install@v2
      with:
        composer-options: "--optimize-autoloader --prefer-dist"

    - name: Release
      shell: bash
      run: |
        CMD="vendor/bin/monorepo-builder release ${{ inputs.version }} --stage ${{ steps.stage.outputs.stage }}"
        if [ "${{ inputs.dry-run }}" = "true" ]; then
          CMD="$CMD --dry-run"
        fi
        echo "Running: $CMD"
        eval "$CMD"
